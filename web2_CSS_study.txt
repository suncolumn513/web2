- CSS
: 디자인과 관련된 정보들을 <style> </style> 태그 안에 집어 넣는다.
 -> CSS로 디자인하는 것이 html보다 가독성, 유지보수에 효율적이다.
 -> html 정보에 전념하게 하기 위해서 html으로부터 디자인에 대한 기능을 뺏어온 것이 CSS다.
- selector(지정자): 이 웹페이지에 있는 모든 이 태그를 선택한다는 의미 + declaration(선언, 효과): 해당 태그에 대해 어떤 효과를 줄 것인가를 설정
- style 속성을 이용하는 경우에는 style 태그가 위치하는 태그에만 효과를 주기 때문에, 셀렉터가 필요없다.

* 웹페이지 안에 CSS를 삽입하는 방법
1. style 태그를 사용한다.
 ex) <style>
   a {
     color:black;
     // property : value
   }
 </style>
2. style 속성을 사용한다.
 ex) style="color:red"

 - 웹페이지 전체의 text에 아무 효과도 주지않게 하기 위해서 : text-decoration: none;
 - 효과를 지정한 후 끝에 반드시 ;(세미콜론) 입력해주기(여러개의 효과를 줄 경우)

 - class라는 html 속성을 주고 선택자로 .으로 코드 중복을 막는다.
ex) .saw{
    color:gray;
}
 -> class라는 속성의 값은 여러개가 올 수 있고 띄어쓰기로 구분한다.
  +) 하나의 태그에는 여러가지 속성이 올 수 있다.
- 여러개의 선택자를 통해서 하나의 태그를 공동을 로제어할 수 있다.
but, 2개의 클래스이상에 의해 영향을 받을 경우, 보다 가까이에 있는(최근에 한) 명령이 더 큰 영향력을 갖게 된다.(이전 것은 효력없음)
-> 우선순위가 높은 것을 사용할 필요가 있다.
 : id 선택자 이용
 ex) #active{
   color:red;
 }
 -> id 선택자가 class 선택자를 이긴다.
 * tag(element) 선택자 < class 선택자 < id 선택자
 * id의 핵심은 중복되면 안된다는 것이다. 즉, 해당 문서에서 다른 곳에서는 id값이 active가 나오면 안된다.
 * 구체적인 것을 포괄적인 것들보다 우선순위를 높게 두었다. 전반적인 디자인하는 과정에서 예외적인 사항만 딱딱 집어주는 것이 효율적이라고 판단했기 때문이다.

- block level element : 화면 전체를 쓰는 태그
- inline element : 자기 크기만큼을 쓰는 태그
  -> display의 속성을 통해 바꿀 수도 있다.
  (display: none;하면 화면에서 안보이게 할 수도 있다.)

- ,(콤마)라는 선택자로 코드의 중복을 줄일 수 있다.
ex) h1, a{
border: 5px solid red;
}
- 컨텐트와 테두리 사이(border 안쪽)의 여백을 생성하는 속성 : padding
- 테두리와 테두리 사이(border 바깥쪽)의 간격 생성 속성 : margin
- 컨텐트의 크기 조정 : width, height

* 웹페이지에서 마우스우클릭 - 검사 하면 웹페이지와 관련해서 효율적으로 디자인할 수 있다.
= 개발자도구를 잘 쓰는 것도 중요하다.
-> 그림(박스)부분을 더블클릭하면 상하키로 직접 움직여 적당한 크기를 찾아볼 수 있다.

- 디자인을 하기 위해 어떠한 의미도 갖지 않는 태그를 사용해야할 경우 존재
: <div> </div> = block element
: <span> </span> = inline element

- 두개의 태그를 나란히 배치하고 싶거나 어떤 배치를 하고 싶으면(grid), 그것을 감싸는 부모 태그가 필요하다.
 -> 부모태그에 id를 준다. (id값은 아무거나 가능)
 ex) <div id="grid">
 -> display:grid;
 grid-template-columns: 150px 1fr;
 = 화면 전체를 쓰게 자동으로 조정되는 단위 : fr
 = 위의 의미는 첫번째 column은 150px 두번째 column은 나머지 공간을 모두 차지하도록 한 것이다.
 * grid: CSS의 최신 기능으로, 내용의 양이 많아짐에 따라 자동적으로 크기가 커진다.
 * caniuse.com 사이트 => 여러 CSS, html, JavaScript의 기술 중에서 현재 웹브라우저들이 얼마나 그 기술을 채택하고 있는가에 대한 통계를 보여주는 서비스

- 조상이 grid인 태그를 선택하는 선택자
: grid라는 id값의 태그 밑에 있는 <ol> 태그라고 의미를 분명히 하는 것이 좋다.
 -> <ol> 태그가 Navigation이 아닌 article 부분에 있을 수도 있기 때문에
     #grid ol{
      padding-left:33px;
    }
